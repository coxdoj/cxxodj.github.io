---
name: Deploy to GitHub Pages

on:
  push:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run
# in-progress and latest queued. However, do NOT cancel in-progress runs as
# we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect build requirements
        id: detect
        run: |
          if [ -f "package.json" ]; then
            echo "needs_build=true" >> $GITHUB_OUTPUT
            echo "Build step detected: package.json found"
          else
            echo "needs_build=false" >> $GITHUB_OUTPUT
            echo "No build step needed: deploying static files"
          fi

      - name: Setup Node.js
        if: steps.detect.outputs.needs_build == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        if: steps.detect.outputs.needs_build == 'true'
        run: npm ci

      - name: Build site
        if: steps.detect.outputs.needs_build == 'true'
        run: |
          if npm run build --if-present; then
            echo "Build completed successfully"
          else
            echo "Build failed"
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository for static sites, or dist/build folder
          # for built sites
          path: >-
            ${{ steps.detect.outputs.needs_build == 'true' &&
            (hashFiles('dist/**') != '' && 'dist' ||
            hashFiles('build/**') != '' && 'build' || '.') || '.' }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
